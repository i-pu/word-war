// Code generated by MockGen. DO NOT EDIT.
// Source: domain/repository/counter.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCounterRepository is a mock of CounterRepository interface
type MockCounterRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCounterRepositoryMockRecorder
}

// MockCounterRepositoryMockRecorder is the mock recorder for MockCounterRepository
type MockCounterRepositoryMockRecorder struct {
	mock *MockCounterRepository
}

// NewMockCounterRepository creates a new mock instance
func NewMockCounterRepository(ctrl *gomock.Controller) *MockCounterRepository {
	mock := &MockCounterRepository{ctrl: ctrl}
	mock.recorder = &MockCounterRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCounterRepository) EXPECT() *MockCounterRepositoryMockRecorder {
	return m.recorder
}

// IncrCounter mocks base method
func (m *MockCounterRepository) IncrCounter() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrCounter")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IncrCounter indicates an expected call of IncrCounter
func (mr *MockCounterRepositoryMockRecorder) IncrCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrCounter", reflect.TypeOf((*MockCounterRepository)(nil).IncrCounter))
}

// SetCounter mocks base method
func (m *MockCounterRepository) SetCounter(value int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetCounter", value)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetCounter indicates an expected call of SetCounter
func (mr *MockCounterRepositoryMockRecorder) SetCounter(value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetCounter", reflect.TypeOf((*MockCounterRepository)(nil).SetCounter), value)
}

// GetCounter mocks base method
func (m *MockCounterRepository) GetCounter() (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCounter")
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCounter indicates an expected call of GetCounter
func (mr *MockCounterRepositoryMockRecorder) GetCounter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCounter", reflect.TypeOf((*MockCounterRepository)(nil).GetCounter))
}
